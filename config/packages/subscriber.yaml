services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, form types, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # This is needed for Authentication failure subscriber
    userProvider:
        autowire: false
        autoconfigure: false
        shared: false
        class: Doctrine\ORM\EntityRepository
        factory: [ '@doctrine.orm.entity_manager', getRepository ]
        arguments: [ App\Entity\User ]

    App\EventSubscriber\AuthenticationFailureSubscriber:
        arguments:
            $userProvider: '@userProvider'
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_failure, method: onAuthenticationFailure }

    App\EventSubscriber\AuthenticationSuccessSubscriber:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccess }

    App\EventSubscriber\BodySubscriber:
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest, priority: 10 }

    App\EventSubscriber\ExceptionSubscriber:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    App\EventSubscriber\JWTCreatedSubscriber:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }

    App\EventSubscriber\JWTDecodedSubscriber:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_decoded, method: onJWTDecoded }

    App\EventSubscriber\RequestSubscriber:
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }

    App\EventSubscriber\UserEntitySubscriber:
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }
